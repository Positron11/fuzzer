@article{Felderer_2016,
  title   = {Security testing},
  volume  = {101},
  doi     = {10.1016/bs.adcom.2015.11.003},
  journal = {Advances in Computers},
  author  = {Felderer, Michael and Büchler, Matthias and Johns, Martin and Brucker, Achim D. and Breu, Ruth and Pretschner, Alexander},
  year    = {2016},
  pages   = {1–51}
} 

@article{Salem_2019,
  author    = {Salem, Hamad Ali Al and Song, Jia},
  biburl    = {https://www.bibsonomy.org/bibtex/2857f045c5833e0ca43dcae98b19b751d/cscjournals},
  issn      = {1985-1553},
  journal   = {International Journal of Computer Science and Security (IJCSS)},
  keywords  = {File Fuzzing, Generation, Grammar-based, Input Mutation, Quality Techniques,},
  language  = {English},
  month     = {June},
  number    = 3,
  pages     = {114 - 123},
  timestamp = {2020-02-03T13:21:46.000+0100},
  title     = {A Review on Grammar-Based Fuzzing Techniques},
  url       = {http://www.cscjournals.org/library/manuscriptinfo.php?mc=IJCSS-1481},
  volume    = 13,
  year      = 2019
}

@article{Gopinath_2019,
  title   = {Building Fast Fuzzers},
  author  = {Rahul Gopinath and Andreas Zeller},
  journal = {ArXiv},
  year    = {2019},
  volume  = {abs/1911.07707},
  url     = {https://api.semanticscholar.org/CorpusID:208138426}
}

@misc{Diehl_2014,
  title     = {Dharma},
  note      = {\url{https://blog.mozilla.org/security/2015/06/29/dharma/}, Last accessed on 28-01-2024 },
  publisher = {Mozilla Foundation},
  author    = {Diehl, Christoph},
  year      = {2014},
  month     = {Jun}
} 

@inproceedings{Hodovan_2018,
  author    = {Hodov\'{a}n, Ren\'{a}ta and Kiss, \'{A}kos and Gyim\'{o}thy, Tibor},
  title     = {Grammarinator: a grammar-based open source fuzzer},
  year      = {2018},
  isbn      = {9781450360531},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3278186.3278193},
  doi       = {10.1145/3278186.3278193},
  abstract  = {Fuzzing, or random testing, is an increasingly popular testing technique. The power of the approach lies in its ability to generate a large number of useful test cases without consuming expensive manpower. Furthermore, because of the randomness, it can often produce unusual cases that would be beyond the awareness of a human tester. In this paper, we present Grammarinator, a general purpose test generator tool that is able to utilize existing parser grammars as models. Since the model can act both as a parser and as a generator, the tool can provide the capabilities of both generation and mutation-based fuzzers. The presented tool is actively used to test various JavaScript engines and has found more than 100 unique issues.},
  booktitle = {Proceedings of the 9th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation},
  pages     = {45\u201348},
  numpages  = {4},
  keywords  = {fuzzing, grammars, random testing, security},
  location  = {Lake Buena Vista, FL, USA},
  series    = {A-TEST 2018}
}
